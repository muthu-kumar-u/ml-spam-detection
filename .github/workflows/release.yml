name: Release Application Code and Publish Docker Image

on:
  push:
    branches:
      - main

jobs:
  release-app:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create zip of the application code
      run: |
        zip -r app_code_${{ github.sha }}.zip .

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t ghcr.io/${{ github.repository }}/spam-detection:${{ github.sha }} .

    - name: Push Docker image to GitHub Container Registry
      run: |
        docker push ghcr.io/${{ github.repository }}/spam-detection:${{ github.sha }}

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.sha_short }}
        release_name: "Release ${{ steps.vars.outputs.sha_short }}"
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./app_code_${{ github.sha }}.zip 
        asset_name: app_code_${{ github.sha }}.zip  
        asset_content_type: application/zip
